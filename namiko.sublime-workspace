{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"erro",
				"error_msg"
			],
			[
				"error",
				"error_destination"
			],
			[
				"require",
				"require_once"
			],
			[
				"_",
				"_SESSION"
			],
			[
				"mail",
				"mailsubject"
			],
			[
				"getHours",
				"getHoursBonus"
			],
			[
				"vari",
				"variance"
			],
			[
				"coll",
				"collectionDate"
			],
			[
				"pm",
				"pymntID"
			],
			[
				"smtp",
				"smtp_password"
			],
			[
				"smtp_",
				"smtp_username"
			],
			[
				"str",
				"stripped_text"
			],
			[
				"from",
				"fromEntity"
			],
			[
				"over",
				"overflow-y\tproperty"
			],
			[
				"array_key",
				"array_key_exists"
			],
			[
				"street",
				"street_number"
			],
			[
				"post",
				"postal_code"
			],
			[
				"total",
				"total_items"
			],
			[
				"print",
				"print_r"
			],
			[
				"quan",
				"quantity"
			],
			[
				"stat",
				"statement"
			],
			[
				"quna",
				"quantity"
			],
			[
				"Rmt",
				"RmtInfString"
			],
			[
				"state",
				"statement"
			],
			[
				"pay",
				"payments"
			],
			[
				"te",
				"template"
			],
			[
				"des",
				"description"
			],
			[
				"qua",
				"quantity_KG_L"
			],
			[
				"realt",
				"realStockOut"
			],
			[
				"cate",
				"category"
			],
			[
				"contri",
				"contributions"
			],
			[
				"contr",
				"contributions"
			],
			[
				"my",
				"myIBAN"
			],
			[
				"max-",
				"max-height\tproperty"
			],
			[
				"the",
				"the_query"
			],
			[
				"border",
				"border-radius\tproperty"
			],
			[
				"bo",
				"border-radius\tproperty"
			],
			[
				"search",
				"search_string"
			],
			[
				"html",
				"htmlspecialchars"
			],
			[
				"d",
				"d"
			],
			[
				"reser",
				"reservation_items"
			],
			[
				"reservat",
				"reservations"
			],
			[
				"data",
				"dataType"
			],
			[
				"pmt",
				"PmtInf"
			],
			[
				"for",
				"foreach\tforeach …"
			],
			[
				"delete",
				"deleteOH"
			],
			[
				"disable",
				"disableReservation"
			],
			[
				"pick",
				"pickup_id_code"
			],
			[
				"pickup",
				"pickup_id_code"
			],
			[
				"res",
				"reservation_items"
			],
			[
				"fetch",
				"fetchAll"
			],
			[
				"success",
				"success-container"
			],
			[
				"retur",
				"returnst"
			],
			[
				"return",
				"return_id_code"
			],
			[
				"ri",
				"ri_id"
			],
			[
				"row",
				"rowCount"
			],
			[
				"reservation",
				"reservation_items"
			],
			[
				"outl",
				"outline-style\tproperty"
			],
			[
				"add",
				"addClass"
			],
			[
				"max",
				"max_length"
			],
			[
				"on",
				"onclick"
			],
			[
				"open",
				"opening_hours"
			],
			[
				"font-st",
				"font-style\tproperty"
			],
			[
				"not",
				"notification0"
			],
			[
				"close",
				"closeNotification"
			],
			[
				"catalogue",
				"catalogue_handler"
			],
			[
				"sele",
				"selectorCategory"
			],
			[
				"load",
				"loadCatalogue"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"overl",
				"overflow-x\tproperty"
			],
			[
				"utf",
				"utf8_decode"
			],
			[
				"col",
				"col-sm-6"
			],
			[
				"appl",
				"application"
			],
			[
				"s",
				"style\tAttr"
			],
			[
				"text",
				"textarea"
			],
			[
				"re",
				"required\tAttr"
			],
			[
				"mem",
				"memberDirectory"
			],
			[
				"ste",
				"stylesheet"
			],
			[
				"crea",
				"created_at"
			],
			[
				"inet",
				"inet_ntop"
			],
			[
				"url",
				"urlencode"
			],
			[
				"strp",
				"strpos"
			],
			[
				"last",
				"last_name"
			],
			[
				"newsletter",
				"newsletter_recipients"
			],
			[
				"newsl",
				"newsletter_recipients"
			],
			[
				"json",
				"json_encode"
			],
			[
				"email",
				"emailForm"
			],
			[
				"time",
				"timeToggle"
			],
			[
				"timeframe",
				"timeframe"
			],
			[
				"second",
				"secondSession"
			],
			[
				"secon",
				"secondSession"
			],
			[
				"out",
				"output"
			],
			[
				"date_create",
				"date_create_from_format"
			],
			[
				"next",
				"nextSession"
			],
			[
				"calen",
				"calendar_handler"
			],
			[
				"st",
				"startTimestamp"
			],
			[
				"end",
				"endTimestamp"
			],
			[
				"start",
				"startTimestamp"
			],
			[
				"center",
				"center-vertical"
			],
			[
				"marg",
				"margin-right"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"img",
				"imgdata"
			],
			[
				"sub",
				"substr"
			],
			[
				"pdf",
				"pdfOut"
			],
			[
				"subtr",
				"substr"
			],
			[
				"deliver",
				"deliveryProof"
			],
			[
				"fp",
				"fputcsv"
			],
			[
				"min",
				"min-width"
			],
			[
				"order",
				"order_total_items"
			],
			[
				"order_total",
				"order_total_items"
			],
			[
				"statem",
				"statement2"
			],
			[
				"order_",
				"order_total"
			],
			[
				"quanti",
				"quantityContainer"
			],
			[
				"opt",
				"optgroup"
			],
			[
				"pro",
				"productName"
			],
			[
				"sta",
				"statement"
			],
			[
				"subtitle",
				"subtitle"
			],
			[
				"cart",
				"cart_box"
			],
			[
				"SES",
				"_SESSION"
			],
			[
				"new",
				"new_total"
			],
			[
				"quantity",
				"quantity_KG_L"
			],
			[
				"price",
				"priceContainer"
			],
			[
				"Hinzu",
				"hinzugefügt"
			],
			[
				"button",
				"button_content"
			],
			[
				"no",
				"notificationClosed"
			],
			[
				"send",
				"send-mail"
			],
			[
				"bei",
				"beitragssumme"
			],
			[
				"sepa",
				"sepaDocs"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pay.php",
			"settings":
			{
				"buffer_size": 1296,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cart_process.php",
			"settings":
			{
				"buffer_size": 3829,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "check-out.php",
			"settings":
			{
				"buffer_size": 1620,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php \nini_set('display_errors', 1);\nsession_start();\nrequire_once(\"inc/config.inc.php\");\nrequire_once(\"inc/functions.inc.php\");\n\n\n//Überprüfe, dass der User eingeloggt ist\n//Der Aufruf von check_user() muss in alle internen Seiten eingebaut sein\n$user = check_user();\n\ninclude(\"templates/header.inc.php\");\ninclude(\"templates/nav.inc.php\");\n\nif (isset($_POST['pay'])) {\n\tif ($user['rights'] > 1) {\n\t\tif ($_POST['agree1']) {\n\t\t\t \t\t\n\t\t\t$uid = $user['uid'];\n\t\t\t$order_ids = \"\";\n\t\t\t$first = true;\n\n\t\t\t$mailtxt = '<h2>Deine Bestellung</h2>';\n\n\t\t\ttry {\n\t\t\t\t$pdo->beginTransaction();\n\n\t\t\t\t// sort bei producer\n\t\t\t\tforeach($_SESSION[\"products\"] as $pro_id => $producer) {\n\t\t\t\t\t$grandtotal = 0;\n\t\t\t\t\t$statement = $pdo->prepare(\"INSERT INTO orders (uid) VALUES ($uid)\");\n\t\t\t\t\t$result1 = $statement->execute();\n\n\t\t\t\t\t$oid = $pdo->lastInsertId();\n\t\t\t\t\t$order_ids .= $first ? $oid : \" + \" . $oid;\n\t\t\t\t\tif ($first) $first = false;\n\n\t\t\t\t\t$statement = $pdo->prepare(\"SELECT producerName FROM producers WHERE pro_id = '$pro_id'\");\n\t\t\t\t\t$statement->execute();\n\t\t\t\t\t$row = $statement->fetch();\n\t\t\t\t\t\n\n\t\t\t\t\t$mailtxt .= '\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>'. $row['producerName'] .'</h3>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tr style=\"text-align: left;\">\n\t\t\t\t\t\t\t\t\t<th>Artikel</th><th>Preis KG/L</th>\n\t\t\t\t\t\t\t\t\t<th>Menge</th>\n\t\t\t\t\t\t\t\t\t<th>&#931;</th>\n\t\t\t\t\t\t\t\t</tr>';\n\n\t\t\t\t\t// items from producer\n\t\t\t\t\tforeach ($producer as $product) {\n\t\t\t\t\t\t$price_KG_L = $product[\"price_KG_L\"];\n\t\t\t\t\t\t$pid = $product[\"pid\"];\n\t\t\t\t\t\t$quantity = $product[\"quantity\"];\n\t\t\t\t\t\t$productName = $product['productName'];\n\t\t\t\t\t\t$total = ($price_KG_L * $quantity);\n\t\t\t\t\t\t$grandtotal += $total;\n\n\t\t\t\t\t\t$statement = $pdo->prepare(\"INSERT INTO order_items (pid, oid, quantity, total) VALUES (:pid, :oid, :quantity, :total)\");\n\t\t\t\t\t\t$result2 = $statement->execute(array('pid' => $pid, 'oid' => $oid, 'quantity' => $quantity, 'total' => $total));\n\n\t\t\t\t\t\t$mailtxt .= '\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>'. htmlspecialchars($productName) .'</td>\n\t\t\t\t\t\t\t<td>'. $currency. sprintf(\"%01.2f\", ($price_KG_L)) .'</td>\n\t\t\t\t\t\t\t<td>'. $quantity .'</td>\n\t\t\t\t\t\t\t<td>'.$currency. sprintf(\"%01.2f\", ($total)). '</td>\n\t\t\t\t\t\t</tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$mailtxt .= '\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 600\">'.$currency.sprintf(\"%01.2f\",$grandtotal).' </td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>';\n\t\t\t\t}\n\n\t\t\t\t// mail info\n\t\t\t\t$email = $user['email'];\n\t\t\t\t$first_name = $user['first_name'];\n\t\t\t\t$last_name = $user['last_name'];\n\t\t\t\t$subject = 'Bestellung Nr. '. $order_ids;\n\t\t\t\t$text = '\n\t\t\t\t<h1>Moin, '. htmlspecialchars($first_name) .'!</h1>\n\t\t\t\t<p>Hiermit, bestätigen wir, dass Deine Bestellung bei uns eingangen ist. Zur Übersicht noch einmal eine Aufstellung der Artikel:<br><br>\n\t\t\t\t'. $mailtxt .'\n\t\t\t\t<br><br>\n\t\t\t\tDenk daran, Deine Bestellung als abgeholt zu markieren unter <a href=\"https://m.namiko.org/my-orders.php\">Meine Bestellungen</a>.\n\t\t\t\t</p>';\n\n\t\t\t\t// send mail\n\t\t\t\t$mail = new Mail($smtp_host, $smtp_username, $smtp_password, $myEmail, $myEntity);\n\t\t\t\t$mail->send($email, $first_name. \" \" .$last_name, $subject, $text, true);\n\n\t\t\t\t// save\n\t\t\t\t$pdo->commit();\n\n\t\t\t} catch (Exception $e) {\n\t\t\t\t$pdo->rollBack();\n\t\t\t\tnotify($e->getMessage());\n\t\t\t}\n\n\t\t\tunset($_SESSION['products']);\n\t\t\tnotify('Deine Bestellung wurde erfolgreich abgeschickt. Die Eingangsbestätigung hast du per E-Mail erhalten. Alternativ einfach direkt zu <a href=\"my-orders.php\">deinen Bestellungen</a>.', \"internal.php\");\n\t\t} else {\n\t\t\tnotify('Du musst den AGB zustimmen.');\n\t\t}\n\t} else {\n\t\tnotify('Du bist leider noch nicht freigeschaltet für Bestellungen.');\n\t}\n}\n\n?>",
			"settings":
			{
				"buffer_size": 3631,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php\nsession_start(); //start session\nini_set('display_errors', 1);\nrequire_once(\"inc/config.inc.php\"); //include config file\nrequire_once(\"inc/Cart.inc.php\");\n\nfunction cartCount () {\n    $total_items = 0;\n    foreach($_SESSION['products'] as $producer) {\n        $total_items += count($producer); //count total items\n    }\n    return $total_items;\n}\n\nif (isset($_POST[\"pid\"])) {\n    foreach($_POST as $key => $value){\n        $new_product[$key] = filter_var($value, FILTER_SANITIZE_STRING); //create a new product array \n    }\n    \n    $selector = $new_product['pid'];\n    $statement = $pdo->prepare(\"SELECT productName, price_KG_L, producer FROM products WHERE pid='$selector'\");\n    $statement->execute();\n\n    while($row = $statement->fetch()){ \n        $new_product[\"productName\"] = $row['productName']; //fetch product name from database\n        $new_product[\"price_KG_L\"] = $row['price_KG_L'];  //fetch product price from database\n        \n        if (isset($_SESSION[\"products\"][$row['producer']])) {\n            if (isset($_SESSION[\"products\"][$row['producer']][$_POST['pid']])) {\n                unset($_SESSION[\"products\"][$row['producer']][$_POST['pid']]); //unset old item\n            }\n\n        }\n        $_SESSION[\"products\"][$row['producer']][$new_product['pid']] = $new_product; //update products with new item array   \n    }\n    die(json_encode(array('items' => cartCount()))); //output json \n}\n\nif (isset($_POST[\"load_cart\"]) && $_POST[\"load_cart\"] == 1) {\n    if (isset($_SESSION[\"products\"]) && cartCount() > 0) { //if we have session variable\n        $cart_box = \"\";\n        $grandtotal = 0;\n        foreach ($_SESSION['products'] as $pro_id => $producer) {\n            $statement = $pdo->prepare(\"SELECT producerName FROM producers WHERE pro_id = '$pro_id'\");\n            $statement->execute();\n            $row = $statement->fetch();\n\n            $cart_box .= '<span class=\"subtitle2\">'. $row['producerName'] .'</span>\n                        <div class=\"center spacer3\">\n                            <table class=\"cartTable\">\n                                <tr>\n                                    <th>Artikel</th>\n                                    <th>Preis KG/L</th>\n                                    <th>Menge</th><th>&#931;</th>\n                                </tr>';\n            $total = 0;\n            foreach ($producer as $product) { //loop though items and prepare html content\n                \n                //set variables to use them in HTML content below\n                $productName = $product[\"productName\"]; \n                $price_KG_L = $product[\"price_KG_L\"];\n                $pid = $product[\"pid\"];\n                $quantity = $product[\"quantity\"];\n                $item_total = ($price_KG_L * $quantity);\n                \n                $cart_box .=  ' <tr>\n                                <td>'. $productName .'</td>\n                                <td>'. $currency. sprintf(\"%01.2f\", $price_KG_L) .'</td>\n                                <td>'. $quantity .'</td>\n                                <td><input type=\"hidden\" name=\"item_total\" value=\"'. $item_total .'\">'. $currency . sprintf(\"%01.2f\", $item_total). '</td>\n                                <td><a href=\"#\" class=\"remove-item\" data-code=\"'. $pid. '\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></a></td>\n                                </tr>';\n                $subtotal = ($price_KG_L * $quantity);\n                $total = ($total + $subtotal);\n            }\n            $grandtotal += $total;\n            $cart_box .= '  <tr>\n                            <td></td><td></td><td></td>\n                            <td class=\"emph\">\n                                <input type=\"hidden\" name=\"total\" value=\"'. $total .'\">'. $currency .'\n                                <span id=\"total\">'.sprintf(\"%01.2f\", $total).'</span>\n                            </td>\n                            </tr>\n                            </table>\n                            </div>';\n            \n        }\n        if (isset($_POST['pay'])) {\n            $cart_box .= '\n                <div class=\"box pad\">\n                  <form action=\"pay.php\" method=\"post\">\n                  <label><input type=\"checkbox\" name=\"agree1\" required> Ich bin damit einverstanden, dass ein Betrag von '.$currency.sprintf(\"%01.2f\",$grandtotal).' von meinem Konto abgebucht wird, entsprechend der Bedingungen des vereinbarten Lastschriftmandates.</label><br>\n                  <br>\n                  <div class=\"center\"><button class=\"clean-btn green\" type=\"submit\" name=\"pay\" required>abschicken <i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i></button></div>\n                  </form>\n                  </div>\n            ';\n        } else {\n            $cart_box .= '  \n            <br>\n            <input id=\"grandtotal_val\" type=\"hidden\" name=\"grandtotal\" value=\"'. $grandtotal .'\">\n            <div id=\"grandtotal\" class=\"emph\">ges. '.sprintf(\"%01.2f\",$grandtotal). $currency.'\n            </div>\n                <a href=\"check-out.php\" title=\"Zur Kasse gehen\">\n                    <button class=\"clean-btn green\">Zur Kasse <i class=\"fa fa-arrow-circle-o-right\" aria-hidden=\"true\"></i></button>\n                </a>\n            </div>';\n        }\n            die($cart_box); //exit and output content\n    } else {\n        die(\"Dein Warenkorb ist leer.\"); //we have empty cart\n    }\n}\n\n################# remove item from shopping cart ################\nif (isset($_GET[\"remove_code\"]) && isset($_SESSION[\"products\"])) {\n    $pid  = filter_var($_GET[\"remove_code\"], FILTER_SANITIZE_STRING); //get the product code to remove\n\n    foreach ($_SESSION[\"products\"] as $pro_id => $producer) {\n        if (isset($producer[$pid])) {\n            unset($_SESSION[\"products\"][$pro_id][$pid]);\n            if (count($_SESSION['products'][$pro_id]) == 0) {\n                unset($_SESSION[\"products\"][$pro_id]);\n            }\n        }   \n    }\n    die(json_encode(array('items'=> cartCount())));\n    //die(json_encode($_SESSION['products']));\n\n}\n?>",
			"settings":
			{
				"buffer_size": 6022,
				"line_ending": "Unix"
			}
		},
		{
			"file": "internal.php",
			"settings":
			{
				"buffer_size": 12409,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/main-nav.inc.php",
			"settings":
			{
				"buffer_size": 4293,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "css/style.css",
			"settings":
			{
				"buffer_size": 14256,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "inc/Cart.inc.php",
			"settings":
			{
				"buffer_size": 4823,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "class Cart {"
			}
		},
		{
			"file": "inc/Mail.inc.php",
			"settings":
			{
				"buffer_size": 2792,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php\nsession_start();\nrequire_once(\"inc/config.inc.php\");\n//require_once(\"inc/functions.inc.php\");\nini_set('display_errors', 1);\n\n\nif (isset($_POST['memberPay'])) {\n\t$creator = $user['uid'];\n\t$mails = [];\n\t$collectionDt = $_POST['date'];\n\t\n\ttry {\n\t\t$pdo->beginTransaction();\n\t\t$sepa = new SEPAprocedure($pdo, $creator, $collectionDt, $myEntity, $myIBAN, $myBIC, $creditorId, $user['first_name']. ' ' .$user['last_name']);\n\n\t\t$statement = $pdo->prepare(\"\n\t\t\tSELECT users.*, mandates.mid, mandates.created_at AS cd FROM users \n\t\t\tLEFT JOIN mandates ON users.uid = mandates.uid \n\t\t\tWHERE users.rights > 1 \n\t\t\tAND users.rights < 5 \n\t\t\tAND (NOT EXISTS (SELECT created_at FROM contributions WHERE users.uid = contributions.uid LIMIT 1) \n\t\t\tOR (DATEDIFF(NOW(), \n\t\t\t(SELECT MAX(created_at) FROM contributions WHERE uid = users.uid LIMIT 1) ) >= 87))\");\n\t\t$result = $statement->execute();\n\t\t$transactions = [];\n\n\t\twhile ($row = $statement->fetch()) {\n\t\t\t$uid = $row['uid'];\n\t\t\t$transactions[$uid]['first_name'] = $row['first_name'];\n\t\t\t$transactions[$uid]['last_name'] = $row['last_name'];\n\t\t\t$transactions[$uid]['email'] = $row['email'];\n\t\t\t$transactions[$uid]['account_holder'] = $row['account_holder'];\n\t\t\t$transactions[$uid]['IBAN'] = $row['IBAN'];\n\t\t\t$transactions[$uid]['BIC'] = $row['BIC'];\n\t\t\t$transactions[$uid]['mid'] = $row['mid'];\n\t\t\t$transactions[$uid]['signed'] = substr($row['cd'], 0, 10);\n\t\t\t$transactions[$uid]['instdAmt'] = (3 * $row['contribution']);\n\t\t\t$transactions[$uid]['rmtInf'] = 'Mitgliedsbeitrag für 3 Monate';\n\t\t}\n\n\t\t$sepa->insertTx($transactions);\n\t\t$sepa->create();\n\t\t$sepa->notify($smtp_host, $smtp_username, $smtp_password, $myEmail, $myEntity);\n\t\t$pdo->commit();\n\n\t\theader('Content-type: \"text/xml\"; charset=\"utf8\";');\n\t\theader('Content-Transfer-Encoding: Binary');\n\t\theader('Content-disposition: attachment; filename=\"'. $sepa->pymntID .'.xml\"');\n\t\twhile (ob_get_level()) {\n\t\t    ob_end_clean();\n\t\t}\n\t\treadfile($sepa->filename);\n\t\texit();\n\t} catch (Exception $e) {\n\t\t$pdo->rollBack();\n\t\tnotify($e->getMessage());\n\t}\n\n}\n?>",
			"file": "test.php",
			"file_size": 290,
			"file_write_time": 131984998834942554,
			"settings":
			{
				"buffer_size": 2047,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit"
			],
			[
				"git:ad",
				"Git: Add All"
			],
			[
				"git:",
				"Git: Commit"
			],
			[
				"git: commit",
				"Git: Commit"
			],
			[
				"git: add",
				"Git: Add All"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"git:push",
				"Git: Push"
			],
			[
				"git:com",
				"Git: Commit"
			],
			[
				"git:add",
				"Git: Add All"
			],
			[
				"packe",
				"Package Control: Remove Package"
			],
			[
				"linter",
				"Preferences: SublimeLinter Settings"
			],
			[
				"package contr",
				"Package Control: Install Package"
			],
			[
				"git:c",
				"Git: Commit"
			],
			[
				"packageres",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packagere",
				"PackageResourceViewer: Extract Package"
			],
			[
				"install packe",
				"Package Control: Install Package"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add All"
			],
			[
				"all",
				"Git: Add All"
			],
			[
				"add a",
				"Git: Add All"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"git: ",
				"Git: Status"
			],
			[
				"git: c",
				"Git: Commit"
			]
		],
		"width": 576.0
	},
	"console":
	{
		"height": 188.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"exit",
			"window.run_command(\"open_file\", {\"file\": \"${packages}/Theme - Default/adaptive/Adaptive.sublime-theme\"})",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ture/projects/htdocs/namiko",
		"/home/ture/projects/htdocs/namiko/css",
		"/home/ture/projects/htdocs/namiko/inc",
		"/home/ture/projects/htdocs/namiko/settings",
		"/home/ture/projects/htdocs/namiko/templates"
	],
	"file_history":
	[
		"/home/ture/projects/htdocs/namiko/templates/main-nav.inc.php",
		"/home/ture/projects/htdocs/namiko/delivered-orders.php",
		"/home/ture/projects/htdocs/namiko/members.php",
		"/home/ture/projects/htdocs/namiko/settings/admin-nav.inc.php",
		"/home/ture/projects/htdocs/namiko/css/style.css",
		"/home/ture/projects/htdocs/namiko/inc/SEPAprocedure.inc.php",
		"/home/ture/Downloads/SID2D20190322T102750.xml",
		"/home/ture/Downloads/SID4D20190403T093842.xml",
		"/home/ture/projects/htdocs/namiko/sepa.php",
		"/home/ture/projects/htdocs/namiko/inc/functions.inc.php",
		"/home/ture/projects/htdocs/namiko/inc/config.inc.php",
		"/home/ture/projects/htdocs/namiko/sepa/SID89D20190406T135848.xml",
		"/home/ture/config.inc.php",
		"/home/ture/projects/htdocs/namiko/internal.php",
		"/home/ture/projects/htdocs/namiko/inc/errors.inc.txt",
		"/home/ture/projects/htdocs/namiko/inc/SepaXML.inc.php",
		"/home/ture/projects/htdocs/namiko/pay.php",
		"/home/ture/projects/htdocs/namiko/templates/admin-nav.inc.php",
		"/home/ture/projects/htdocs/namiko/sepa/SID54D20190402T191122.xml",
		"/home/ture/projects/htdocs/namiko/inc/Mail.inc.php",
		"/home/ture/Studium/18-19SS/Programmieren2/test.java",
		"/home/ture/projects/htdocs/namiko/register.php",
		"/home/ture/projects/htdocs/namiko/sepa/SID59D20190402T195635.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID51D20190402T184641.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID52D20190402T184942.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID53D20190402T185102.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID50D20190402T183432.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID47D20190402T172942.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID49D20190402T173509.xml",
		"/home/ture/projects/htdocs/namiko/session_process.php",
		"/home/ture/projects/htdocs/namiko/sepa/SID44D20190401T142551.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID42D20190401T142219.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID35D20190401T135102.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID41D20190401T141908.xml",
		"/home/ture/projects/htdocs/namiko/sepa/SID29D20190401T134257.xml",
		"/home/ture/projects/dice.py",
		"/home/ture/projects/ue03.py",
		"/home/ture/projects/htdocs/namiko/inc/createSEPA.inc.php",
		"/home/ture/projects/htdocs/namiko/agree.php",
		"/home/ture/projects/htdocs/namiko/sepa/SID5D20190330T190051.xml",
		"/home/ture/projects/htdocs/namiko/admin.php",
		"/home/ture/projects/htdocs/namiko/sepa/SID4D20190330T185607.xml",
		"/home/ture/Studium/18-19SS/DatenstrukturenUndAlgorithmen/TestAlgorithm.java",
		"/home/ture/Studium/18-19SS/Datenbanksysteme1/ue01.txt",
		"/home/ture/projects/htdocs/namiko/calendar.php",
		"/home/ture/projects/htdocs/namiko/my-orders.php",
		"/home/ture/.config/i3blocks/battery.py",
		"/home/ture/projects/htdocs/namiko/inventory.php",
		"/home/ture/projects/htdocs/namiko/templates/nav.inc.php",
		"/home/ture/.config/i3blocks/config",
		"/tmp/mozilla_ture0/Loc-1.java",
		"/home/ture/Studium/18-19SS/Programmieren2/Datum.java",
		"/tmp/mozilla_ture0/Loc.java",
		"/home/ture/Studium/18-19Ss",
		"/home/ture/Studium/18-19SS/Programmieren2/ScanMan.java",
		"/home/ture/projects/htdocs/namiko/member.php",
		"/C/Workspace/test.csv",
		"/C/Workspace/Studium/18-19SS/DatenstrukturenUndAlgorithmen/TestAlgorithm.java",
		"/C/Workspace/Studium/18-19WS/PR1/übungen/Pascal.java",
		"/C/MAMP/htdocs/namiko/my-orders.php",
		"/C/MAMP/htdocs/namiko/internal.php",
		"/C/MAMP/htdocs/namiko/pay.php",
		"/C/MAMP/htdocs/namiko/cart_process.php",
		"/C/MAMP/htdocs/wmh/emailcenter.php",
		"/C/MAMP/htdocs/wmh/templates/admin-nav.inc.php",
		"/C/MAMP/htdocs/namiko/templates/main-nav.inc.php",
		"/C/MAMP/htdocs/namiko/inc/DOMValidator.inc.php",
		"/C/MAMP/htdocs/namiko/sepa.php",
		"/C/MAMP/htdocs/namiko/inc/SepaXML.inc.php",
		"/C/MAMP/htdocs/namiko/css/style.css",
		"/C/MAMP/htdocs/namiko/inc/config.inc.php",
		"/C/MAMP/htdocs/namiko/session_process.php",
		"/C/MAMP/htdocs/namiko/check-out.php",
		"/C/Users/Ture/AppData/Local/Temp/fz3temp-2/pay.php",
		"/C/MAMP/htdocs/namiko/dev.sql",
		"/C/MAMP/htdocs/namiko/session.php",
		"/C/Users/Ture/AppData/Local/Temp/fz3temp-2/config.inc.php",
		"/C/Users/Ture/AppData/Local/Temp/fz3temp-2/index.html",
		"/C/Users/Ture/AppData/Local/Temp/fz3temp-2/index 2.html",
		"/C/MAMP/htdocs/namiko/inc/functions.inc.php",
		"/C/MAMP/htdocs/namiko/templates/admin-nav.inc.php",
		"/C/MAMP/htdocs/namiko/delivered-orders.php",
		"/C/MAMP/htdocs/namiko/admin.php",
		"/C/MAMP/htdocs/namiko/calendar.php",
		"/C/Users/Ture/AppData/Local/Temp/fz3temp-2/session_process.php",
		"/C/MAMP/htdocs/wmh/AA release/config.inc.php",
		"/C/MAMP/htdocs/wmh/members.php",
		"/C/MAMP/htdocs/namiko/test.php",
		"/C/MAMP/htdocs/namiko/members.php",
		"/C/MAMP/htdocs/namiko/inventory.php",
		"/C/MAMP/htdocs/namiko/emailcenter.php",
		"/C/Users/Ture/AppData/Local/Temp/fz3temp-2/session.php",
		"/C/MAMP/htdocs/namiko/del_event.php",
		"/C/MAMP/htdocs/namiko/order_total.php",
		"/C/MAMP/htdocs/namiko/catalogue.php",
		"/C/Users/Ture/AppData/Local/Temp/SID195D20190131T135040.xml",
		"/C/Users/Ture/AppData/Local/Temp/SID194D20190131T133934.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID189D20190131T131827.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID190D20190131T132221.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID191D20190131T132622.xml",
		"/C/Users/Ture/AppData/Local/Temp/SID192D20190131T132939.xml",
		"/C/Users/Ture/AppData/Local/Temp/SID193D20190131T133605.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID179D20190131T125305.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID180D20190131T125654.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID181D20190131T125834.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID182D20190131T130250.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID183D20190131T130604.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID186D20190131T131150.xml",
		"/C/MAMP/htdocs/namiko/sepa/SID187D20190131T131307.xml",
		"/C/Users/Ture/Desktop/code",
		"/C/MAMP/htdocs/namiko/templates/header.inc.php",
		"/C/MAMP/htdocs/namiko/templates/footer.inc.php",
		"/C/MAMP/htdocs/namiko/producers.php",
		"/C/MAMP/htdocs/namiko/edit_producers.php",
		"/C/MAMP/htdocs/namiko/producer_info.php",
		"/C/MAMP/htdocs/namiko/personal_data.php",
		"/C/Users/Ture/AppData/Local/Temp/fz3temp-2/internal.php",
		"/C/Users/Ture/AppData/Local/Temp/fz3temp-2/admin.php",
		"/C/MAMP/htdocs/namiko/newsletter.php",
		"/C/MAMP/htdocs/namiko/documents.php",
		"/C/MAMP/htdocs/namiko/te.php",
		"/C/MAMP/htdocs/namiko/unsubscribe.php",
		"/C/MAMP/htdocs/namiko/change_password.php",
		"/C/MAMP/htdocs/namiko/change_email.php",
		"/C/Workspace/FossilHunter/pygamezero/config.py",
		"/C/MAMP/htdocs/namiko/js/functions.js",
		"/C/Users/Ture/AppData/Roaming/Sublime Text 3/Packages/User/Adaptive.sublime-theme",
		"/C/Users/Ture/AppData/Roaming/Sublime Text 3/Packages/Theme - Default/adaptive/Adaptive.sublime-theme"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 105.0,
		"where_history":
		[
			"",
			"/home/ture/projects/htdocs/namiko/inc,<open files>",
			"/home/ture/projects/htdocs/namiko/inc",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Deine Bestellung",
			"box",
			"Deine Bestellung",
			"Deine ",
			"cartContent",
			"Deine Bestellung",
			").",
			"Deine Bestellung",
			"header spacer",
			"Bestellung",
			"deine bestellung",
			"DE16500105175422684900",
			"Tschern",
			"tschern",
			"throw new Exception",
			"throw new",
			"throw",
			"$user",
			"$table",
			"$_SESSION['preorders']",
			"$_SESSION['products']",
			"mailsubject",
			"$pdo",
			"$user",
			"$_SESSION[\"products\"]",
			"$product",
			"$payments",
			"standardDeviation",
			"uid",
			"pdo",
			"$this->pdo",
			"collectionDt",
			"collectionDT",
			"$collectionDate",
			"collect",
			"transaction",
			"there",
			"filename",
			"pymntID",
			"pymnt",
			"$time",
			"$date",
			"self::$doc",
			"self::$xml",
			"$sid",
			"$this->$pdo",
			"$this->xml",
			"self::",
			"$sepa->",
			"$pdo->",
			"$row",
			"$sepa->",
			"$this->sepa",
			"mid",
			"cart",
			"<",
			"priceContainer",
			"admin",
			"<?php echo htmlspecialchars($_SESSION['",
			"cartcount",
			"']\n",
			"center",
			"products.p",
			"$product",
			"$_POST['pro_id']]",
			"<a ",
			"a ",
			"<a class=",
			"<a",
			"inventory",
			"user",
			"RmtInf",
			"<RmtInf>",
			"internal",
			"INTERNAL",
			"PHP_SELF",
			"debitorSum",
			"`namiko`.",
			"Dokumentation",
			"iid",
			"documentation",
			"add_p",
			"addProducer",
			"documentation",
			"bold",
			"stmnt",
			"$recommendations",
			"deficit",
			"$product",
			"$product['deficit']",
			"deficit",
			"REQUEST_URI"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"error"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pay.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1296,
						"regions":
						{
						},
						"selection":
						[
							[
								550,
								550
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "cart_process.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3829,
						"regions":
						{
						},
						"selection":
						[
							[
								203,
								203
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "check-out.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1620,
						"regions":
						{
						},
						"selection":
						[
							[
								368,
								368
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3631,
						"regions":
						{
						},
						"selection":
						[
							[
								3631,
								3631
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6022,
						"regions":
						{
						},
						"selection":
						[
							[
								5,
								5
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "internal.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12409,
						"regions":
						{
						},
						"selection":
						[
							[
								3629,
								3629
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1264.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "templates/main-nav.inc.php",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 4293,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1871.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "css/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14256,
						"regions":
						{
						},
						"selection":
						[
							[
								970,
								970
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 567.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "inc/Cart.inc.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4823,
						"regions":
						{
						},
						"selection":
						[
							[
								1940,
								1940
							]
						],
						"settings":
						{
							"auto_name": "class Cart {",
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 410.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "inc/Mail.inc.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2792,
						"regions":
						{
						},
						"selection":
						[
							[
								2703,
								2703
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2047,
						"regions":
						{
						},
						"selection":
						[
							[
								1964,
								1964
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.454171208874,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 32.0
	},
	"pinned_build_system": "",
	"project": "namiko.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
